generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  role      String    @default("USER")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  theme     String    @default("light")
  posts     Post[]
  comments  Comment[]
  media     Media[]
  likes     Like[]
}

model Post {
  id        String    @id @default(cuid())
  title     String
  slug      String    @unique
  content   String
  published Boolean   @default(false)
  authorId  String
  imagePath String?
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Media {
  id        String   @id @default(cuid())
  filename  String
  path      String
  mimeType  String
  size      Int
  uploadedBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [uploadedBy], references: [id])
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  userId    String   // who performed the action, but no relation
  details   String   // JSON string containing relevant details
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  authorId  String
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  postId    String
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}